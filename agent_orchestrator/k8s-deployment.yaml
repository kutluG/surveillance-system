apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent-orchestrator
  labels:
    app: agent-orchestrator
    service: orchestration
spec:
  replicas: 2
  selector:
    matchLabels:
      app: agent-orchestrator
  template:
    metadata:
      labels:
        app: agent-orchestrator
        service: orchestration
    spec:
      containers:
      - name: agent-orchestrator
        image: surveillance-agent-orchestrator:latest
        ports:
        - containerPort: 8006
          name: http
        env:
        - name: HOST
          value: "0.0.0.0"
        - name: PORT
          value: "8006"
        - name: REDIS_URL
          value: "redis://redis:6379/0"
        - name: RAG_SERVICE_URL
          value: "http://advanced-rag-service:8000"
        - name: RULEGEN_SERVICE_URL
          value: "http://rulegen-service:8000"
        - name: NOTIFIER_SERVICE_URL
          value: "http://notifier:8000"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: database-url
        - name: LOG_LEVEL
          value: "INFO"
        - name: ENABLE_RATE_LIMITING
          value: "true"
        
        # Enhanced Health Checks
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8006
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8006
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        
        startupProbe:
          httpGet:
            path: /health/live
            port: 8006
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 10
          successThreshold: 1
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        
        # Security context
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
        
        # Volume mounts for temporary files
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: cache-volume
          mountPath: /app/cache
      
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: cache-volume
        emptyDir: {}
      
      # Service account for RBAC
      serviceAccountName: agent-orchestrator-sa
      
      # Pod disruption budget considerations
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: agent-orchestrator-service
  labels:
    app: agent-orchestrator
    service: orchestration
spec:
  selector:
    app: agent-orchestrator
  ports:
  - name: http
    port: 8006
    targetPort: 8006
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: agent-orchestrator-sa
  labels:
    app: agent-orchestrator

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: agent-orchestrator-pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: agent-orchestrator
