[tool:pytest]
# Pytest configuration for Agent Orchestrator Service

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --strict-markers
    --strict-config
    --disable-warnings
    --tb=short
    --durations=10

# Markers
markers =
    unit: Unit tests that run quickly and don't require external dependencies
    integration: Integration tests that may require mocked external services
    e2e: End-to-end tests that test complete workflows
    performance: Performance and load tests
    slow: Tests that take a long time to run
    requires_services: Tests that require external services to be running

# Async support
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Timeout (can be overridden per test category)
timeout = 30

# Coverage options
[coverage:run]
source = .
omit = 
    tests/*
    */tests/*
    test_*.py
    */__pycache__/*
    */venv/*
    */env/*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
