name: Dependency Validation

on:
  push:
    branches: [ main, develop ]
    paths: 
      - '**/requirements.txt'
      - '**/requirements*.txt'
      - '.github/workflows/dependency-validation.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - '**/requirements.txt'
      - '**/requirements*.txt'
      - '.github/workflows/dependency-validation.yml'

jobs:
  validate-dependencies:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]
        service:
          - annotation_frontend
          - advanced_rag_service
          - agent_orchestrator
          - edge_service
          - retention_service
          - # Add other services as needed
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-

    - name: Install pip-audit for security scanning
      run: |
        python -m pip install --upgrade pip
        python -m pip install pip-audit

    - name: Validate dependencies for ${{ matrix.service }}
      working-directory: ${{ matrix.service }}
      run: |
        if [ -f "requirements.txt" ]; then
          echo "Validating ${{ matrix.service }}/requirements.txt"
          
          # Copy validation script if it doesn't exist in this service
          if [ ! -f "validate_dependencies.py" ]; then
            cp ../annotation_frontend/validate_dependencies.py .
          fi
          
          # Run validation with security check
          python validate_dependencies.py --strict --check-security
          
          echo "‚úÖ ${{ matrix.service }} dependencies validated successfully"
        else
          echo "‚ö†Ô∏è No requirements.txt found in ${{ matrix.service }}"
        fi

    - name: Generate lock file
      working-directory: ${{ matrix.service }}
      if: matrix.python-version == '3.12'  # Only generate once
      run: |
        if [ -f "requirements.txt" ]; then
          # Install dependencies to generate accurate lock file
          python -m pip install -r requirements.txt
          python validate_dependencies.py --generate-lock
        fi

    - name: Upload lock file as artifact
      if: matrix.python-version == '3.12'
      uses: actions/upload-artifact@v3
      with:
        name: requirements-lock-${{ matrix.service }}
        path: ${{ matrix.service }}/requirements.lock
        retention-days: 30

  security-audit:
    runs-on: ubuntu-latest
    needs: validate-dependencies
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        python -m pip install pip-audit safety bandit

    - name: Run comprehensive security audit
      run: |
        echo "üîí Running comprehensive security audit..."
        
        # Find all requirements.txt files
        find . -name "requirements.txt" -not -path "./.git/*" > req_files.txt
        
        if [ -s req_files.txt ]; then
          echo "Found requirements files:"
          cat req_files.txt
          
          # Run pip-audit on each requirements file
          while IFS= read -r req_file; do
            echo "üîç Auditing $req_file"
            pip-audit -r "$req_file" --format=json --output="${req_file%.txt}_audit.json" || true
          done < req_files.txt
          
          # Run safety check
          echo "üîç Running safety check..."
          find . -name "requirements.txt" -exec safety check -r {} \; || true
          
        else
          echo "‚ö†Ô∏è No requirements.txt files found"
        fi

    - name: Upload security audit results
      uses: actions/upload-artifact@v3
      with:
        name: security-audit-results
        path: |
          **/*_audit.json
          **/safety_report.txt
        retention-days: 30

  dependency-drift-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for comparison

    - name: Check for dependency changes
      run: |
        echo "üîç Checking for dependency changes..."
        
        # Get changed requirements files in the last commit
        changed_files=$(git diff --name-only HEAD~1 HEAD | grep requirements.txt || true)
        
        if [ -n "$changed_files" ]; then
          echo "üì¶ Requirements files changed:"
          echo "$changed_files"
          
          # Create issue comment or notification
          echo "::notice title=Dependencies Updated::The following requirements files were updated: $changed_files"
          
          # You could add Slack/Teams notification here
          # curl -X POST -H 'Content-type: application/json' \
          #   --data '{"text":"üö® Dependencies updated in surveillance-system: '"$changed_files"'"}' \
          #   "$SLACK_WEBHOOK_URL"
        else
          echo "‚úÖ No dependency changes detected"
        fi
