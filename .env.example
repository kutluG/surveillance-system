# Environment Configuration for Surveillance System
# Copy this file to .env and configure with your settings

# =============================================================================
# CORE INFRASTRUCTURE
# =============================================================================

# Database Configuration
DATABASE_URL=postgresql://user:password@postgres:5432/events_db

# Redis Configuration  
REDIS_URL=redis://redis:6379/0

# Kafka Configuration
KAFKA_BROKER=kafka:9092
KAFKA_TOPIC=camera.events
GROUP_ID=ingest-service-group

# =============================================================================
# MESSAGING & COMMUNICATION
# =============================================================================

# MQTT Broker Configuration
MQTT_BROKER=mqtt.example.com
MQTT_PORT=8883
MQTT_TLS_CA=/certs/ca.crt
MQTT_TLS_CERT=/certs/client.crt
MQTT_TLS_KEY=/certs/client.key
MQTT_TOPIC_SUB=camera/events/#

# =============================================================================
# AI & MACHINE LEARNING
# =============================================================================

# OpenAI Configuration (Required for AI features)
OPENAI_API_KEY=your-openai-api-key-here
OPENAI_MODEL=gpt-4

# Weaviate Vector Database
WEAVIATE_URL=http://weaviate:8080
WEAVIATE_API_KEY=

# =============================================================================
# CAMERA & VIDEO PROCESSING
# =============================================================================

# Camera Configuration
CAMERA_ID=camera-01
CAPTURE_DEVICE=0  # 0 for webcam, or RTSP URL like rtsp://192.168.1.100/stream
MODEL_DIR=/models
TARGET_RESOLUTION=224,224

# Video Storage Configuration
VIDEO_STORAGE_TYPE=local  # "local" or "s3"
LOCAL_STORAGE_PATH=/data/clips
CLIP_BASE_URL=http://localhost:8008/clips

# AWS S3 Configuration (if using S3 storage)
S3_BUCKET_NAME=surveillance-clips
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=

# Clip Generation Settings
CLIP_DURATION_SECONDS=30
PRE_EVENT_BUFFER_SECONDS=10
POST_EVENT_BUFFER_SECONDS=20

# =============================================================================
# NOTIFICATION CHANNELS
# =============================================================================

# Email Configuration (SMTP)
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password
FROM_EMAIL=security@yourcompany.com

# Slack Configuration
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# SMS Configuration (Twilio)
TWILIO_ACCOUNT_SID=your-twilio-account-sid
TWILIO_AUTH_TOKEN=your-twilio-auth-token
TWILIO_FROM_NUMBER=+1234567890

# Generic Webhook Configuration
WEBHOOK_URL=https://your-webhook-endpoint.com/notifications
WEBHOOK_SECRET=your-webhook-secret

# =============================================================================
# SECURITY & AUTHENTICATION
# =============================================================================

# JWT Configuration
JWT_SECRET_KEY=your-secret-key-change-in-production-to-something-secure
JWT_ALGORITHM=HS256
JWT_EXPIRATION_HOURS=24

# =============================================================================
# MONITORING & OBSERVABILITY
# =============================================================================

# Prometheus Configuration
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9090

# Grafana Configuration
GRAFANA_ENABLED=true
GRAFANA_PORT=3000

# =============================================================================
# SERVICE URLS (Internal Communication)
# =============================================================================

EDGE_SERVICE_URL=http://edge_service:8000
INGEST_SERVICE_URL=http://ingest_service:8000
RAG_SERVICE_URL=http://rag_service:8000
PROMPT_SERVICE_URL=http://prompt_service:8000
RULEGEN_SERVICE_URL=http://rulegen_service:8000
NOTIFIER_SERVICE_URL=http://notifier:8000
VMS_SERVICE_URL=http://vms_service:8000
MQTT_KAFKA_BRIDGE_URL=http://mqtt_kafka_bridge:8000

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Environment
ENVIRONMENT=development  # development, staging, production
DEBUG=true
LOG_LEVEL=INFO

# =============================================================================
# INSTRUCTIONS
# =============================================================================
# 
# 1. Copy this file to .env: cp .env.example .env
# 2. Update OPENAI_API_KEY with your actual OpenAI API key
# 3. Configure notification channels (email, Slack, SMS) as needed
# 4. Set CAMERA_ID and CAPTURE_DEVICE for your camera setup
# 5. Update database credentials if needed
# 6. Run: ./scripts/setup-dev.sh to complete setup
#
